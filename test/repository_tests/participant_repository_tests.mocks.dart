// Mocks generated by Mockito 5.4.4 from annotations
// in runmate/test/repository_tests/participant_repository_tests.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:runmate/enums/challenge_status_enum.dart' as _i6;
import 'package:runmate/enums/challenge_type_enum.dart' as _i7;
import 'package:runmate/models/challenge.dart' as _i3;
import 'package:runmate/repositories/challenge_repository.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCollectionReference_0<T extends Object?> extends _i1.SmartFake
    implements _i2.CollectionReference<T> {
  _FakeCollectionReference_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseFirestore_1 extends _i1.SmartFake
    implements _i2.FirebaseFirestore {
  _FakeFirebaseFirestore_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChallenge_2 extends _i1.SmartFake implements _i3.Challenge {
  _FakeChallenge_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ChallengeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockChallengeRepository extends _i1.Mock
    implements _i4.ChallengeRepository {
  MockChallengeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CollectionReference<Object?> get collection => (super.noSuchMethod(
        Invocation.getter(#collection),
        returnValue: _FakeCollectionReference_0<Object?>(
          this,
          Invocation.getter(#collection),
        ),
      ) as _i2.CollectionReference<Object?>);

  @override
  _i2.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_1(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i2.FirebaseFirestore);

  @override
  _i5.Future<_i3.Challenge> createChallenge(_i3.Challenge? challenge) =>
      (super.noSuchMethod(
        Invocation.method(
          #createChallenge,
          [challenge],
        ),
        returnValue: _i5.Future<_i3.Challenge>.value(_FakeChallenge_2(
          this,
          Invocation.method(
            #createChallenge,
            [challenge],
          ),
        )),
      ) as _i5.Future<_i3.Challenge>);

  @override
  _i5.Future<List<_i3.Challenge>> getChallengesByOwnerId({String? ownerId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChallengesByOwnerId,
          [],
          {#ownerId: ownerId},
        ),
        returnValue: _i5.Future<List<_i3.Challenge>>.value(<_i3.Challenge>[]),
      ) as _i5.Future<List<_i3.Challenge>>);

  @override
  _i5.Future<_i3.Challenge> getChallengeById(String? challengeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChallengeById,
          [challengeId],
        ),
        returnValue: _i5.Future<_i3.Challenge>.value(_FakeChallenge_2(
          this,
          Invocation.method(
            #getChallengeById,
            [challengeId],
          ),
        )),
      ) as _i5.Future<_i3.Challenge>);

  @override
  _i5.Future<List<_i3.Challenge>> getAllChallenges() => (super.noSuchMethod(
        Invocation.method(
          #getAllChallenges,
          [],
        ),
        returnValue: _i5.Future<List<_i3.Challenge>>.value(<_i3.Challenge>[]),
      ) as _i5.Future<List<_i3.Challenge>>);

  @override
  _i5.Future<List<_i3.Challenge>> getChallengesByStatus(
          _i6.ChallengeStatusEnum? status) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChallengesByStatus,
          [status],
        ),
        returnValue: _i5.Future<List<_i3.Challenge>>.value(<_i3.Challenge>[]),
      ) as _i5.Future<List<_i3.Challenge>>);

  @override
  _i5.Future<List<_i3.Challenge>> getChallengesWhereNameContainingString(
          String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChallengesWhereNameContainingString,
          [name],
        ),
        returnValue: _i5.Future<List<_i3.Challenge>>.value(<_i3.Challenge>[]),
      ) as _i5.Future<List<_i3.Challenge>>);

  @override
  _i5.Future<List<_i3.Challenge>> getChallengesFromDateTimeToDateTime(
    DateTime? start,
    DateTime? end,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChallengesFromDateTimeToDateTime,
          [
            start,
            end,
          ],
        ),
        returnValue: _i5.Future<List<_i3.Challenge>>.value(<_i3.Challenge>[]),
      ) as _i5.Future<List<_i3.Challenge>>);

  @override
  _i5.Future<List<_i3.Challenge>> getChallengesByType(
          _i7.ChallengeTypeEnum? type) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChallengesByType,
          [type],
        ),
        returnValue: _i5.Future<List<_i3.Challenge>>.value(<_i3.Challenge>[]),
      ) as _i5.Future<List<_i3.Challenge>>);

  @override
  _i5.Future<void> deleteChallenge(String? challengeId) => (super.noSuchMethod(
        Invocation.method(
          #deleteChallenge,
          [challengeId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.Challenge> updateChallenge(
    String? challengeId,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateChallenge,
          [
            challengeId,
            data,
          ],
        ),
        returnValue: _i5.Future<_i3.Challenge>.value(_FakeChallenge_2(
          this,
          Invocation.method(
            #updateChallenge,
            [
              challengeId,
              data,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Challenge>);

  @override
  _i5.Future<_i3.Challenge> updateDescription(
    String? challengeId,
    String? description,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDescription,
          [
            challengeId,
            description,
          ],
        ),
        returnValue: _i5.Future<_i3.Challenge>.value(_FakeChallenge_2(
          this,
          Invocation.method(
            #updateDescription,
            [
              challengeId,
              description,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Challenge>);

  @override
  _i5.Future<_i3.Challenge> updateLongDescription(
    String? challengeId,
    String? longDescription,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLongDescription,
          [
            challengeId,
            longDescription,
          ],
        ),
        returnValue: _i5.Future<_i3.Challenge>.value(_FakeChallenge_2(
          this,
          Invocation.method(
            #updateLongDescription,
            [
              challengeId,
              longDescription,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Challenge>);

  @override
  _i5.Future<_i3.Challenge> updateGoalDistance(
    String? challengeId,
    double? goalDistance,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateGoalDistance,
          [
            challengeId,
            goalDistance,
          ],
        ),
        returnValue: _i5.Future<_i3.Challenge>.value(_FakeChallenge_2(
          this,
          Invocation.method(
            #updateGoalDistance,
            [
              challengeId,
              goalDistance,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Challenge>);

  @override
  _i5.Future<_i3.Challenge> updateTotalNumberOfParticipants(
    String? challengeId,
    int? totalNumberOfParticipants,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTotalNumberOfParticipants,
          [
            challengeId,
            totalNumberOfParticipants,
          ],
        ),
        returnValue: _i5.Future<_i3.Challenge>.value(_FakeChallenge_2(
          this,
          Invocation.method(
            #updateTotalNumberOfParticipants,
            [
              challengeId,
              totalNumberOfParticipants,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Challenge>);

  @override
  _i5.Future<_i3.Challenge> addTotalNumberOfParticipants(
    String? challengeId,
    int? addedPeople,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTotalNumberOfParticipants,
          [
            challengeId,
            addedPeople,
          ],
        ),
        returnValue: _i5.Future<_i3.Challenge>.value(_FakeChallenge_2(
          this,
          Invocation.method(
            #addTotalNumberOfParticipants,
            [
              challengeId,
              addedPeople,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Challenge>);

  @override
  _i5.Future<_i3.Challenge> updateStartDate(
    String? challengeId,
    DateTime? startDate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateStartDate,
          [
            challengeId,
            startDate,
          ],
        ),
        returnValue: _i5.Future<_i3.Challenge>.value(_FakeChallenge_2(
          this,
          Invocation.method(
            #updateStartDate,
            [
              challengeId,
              startDate,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Challenge>);

  @override
  _i5.Future<_i3.Challenge> updateEndDate(
    String? challengeId,
    DateTime? endDate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEndDate,
          [
            challengeId,
            endDate,
          ],
        ),
        returnValue: _i5.Future<_i3.Challenge>.value(_FakeChallenge_2(
          this,
          Invocation.method(
            #updateEndDate,
            [
              challengeId,
              endDate,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Challenge>);

  @override
  _i5.Future<_i3.Challenge> updateStatus(
    String? challengeId,
    _i6.ChallengeStatusEnum? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateStatus,
          [
            challengeId,
            status,
          ],
        ),
        returnValue: _i5.Future<_i3.Challenge>.value(_FakeChallenge_2(
          this,
          Invocation.method(
            #updateStatus,
            [
              challengeId,
              status,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Challenge>);

  @override
  _i5.Future<_i3.Challenge> updateType(
    String? challengeId,
    _i7.ChallengeTypeEnum? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateType,
          [
            challengeId,
            type,
          ],
        ),
        returnValue: _i5.Future<_i3.Challenge>.value(_FakeChallenge_2(
          this,
          Invocation.method(
            #updateType,
            [
              challengeId,
              type,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Challenge>);
}
